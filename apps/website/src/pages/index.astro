---
import Layout from "@layouts/Layout.astro";
import Link from "@components/Link.astro";
import Bento from "@components/Bento.astro";

import { projects } from "@packages/data/project";
const shownProjects = projects.filter((p) => p.show !== "hidden");

import {
  TbDownload,
  TbBrandGithub,
  TbBrandLinkedin,
  TbMail,
  TbStarFilled
} from "solid-icons/tb";
import { Image } from "astro:assets";

type ImagesObject = { [key: string]: Function };
const allImages = import.meta.glob<{ default: ImageMetadata }>(
  "/src/images/**/*.{jpeg,jpg,png,gif}"
) as ImagesObject;
let images: ImagesObject = {};
Object.entries(allImages).forEach(([key, func]) => {
  const [_a, _b, _c, image] = key.split("/");
  images[image] = func;
});
---

<Layout>
  <ol>
    <Bento class="intro">
      <div class="text">
        <hgroup>
          <h1>Roni Tuohino</h1>
          <p class="title">Fullstack Developer</p>
        </hgroup>
        
        <p class="note">
          I enjoy engineering solutions.
          <br/>
          Check out projects I've worked on and download my résumé!
        </p>
      </div>

      <ul class="links">
        <li class="github">
          <Link
            ariaLabel="See my GitHub profile"
            href="https://github.com/ronituohino"
          >
            <TbBrandGithub />
          </Link>
        </li>
        <li class="linkedin">
          <Link
            ariaLabel="See my Linkedin profile"
            href="https://www.linkedin.com/in/ronituohino/"
          >
            <TbBrandLinkedin />
          </Link>
        </li>
        <li>
          <Link
            ariaLabel="Send me an email"
            href="mailto:tuohinoroni@gmail.com"
          >
            <TbMail />
          </Link>
        </li>

        <li class="resume">
          <Link href="/ronituohino-resume.pdf" title="Download résumé"
            ><TbDownload /></Link
          >
        </li>
      </ul>
    </Bento>

    {
      shownProjects.map((project, index) => {
        const infoLine =
          project.organization !== ""
            ? [project.year, project.organization].join(" · ")
            : project.year;

        const fadeDelay = `${(index + 1) * 150}ms`
        return (
          <Bento 
            class=`project pos-${index+1}` 
            style={{ "--fade-delay": fadeDelay }} 
            data-featured={project.show === "featured"}
          >
            <Link href={project.links[0].url} 
              ariaLabel={`${project.title}: 
              ${project.description}
              (${infoLine}${project.show === "featured" ? ", featured" : ""})`}>
              <div class="card">
                <Image
                  src={images[`${project.slug}.png`]()}
                  alt={project.description}
                />
                {project.show === "featured" && <TbStarFilled class="featured-star" />}
                <div class="details">
                  <p>{project.title}</p>
                  <p class="info">{infoLine}</p>
                </div>
              </div>
            </Link>
          </Bento>
        );
      })
    }
  </ol>
</Layout>

<style lang="less">
  @grid-1-bp: 490px;
  @grid-2-bp: 720px;
  @link-bp: 470px;
  @smaller-bp: 420px;

  ol {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(var(--bento-min-size), 1fr));
    grid-auto-flow: dense;

    justify-content: center;
    grid-gap: var(--bento-gap);
  }

  .intro {
    --initial-opacity: 1;
    --initial-animation: none;

    padding: 1rem;
    @media only screen and (min-width: @grid-1-bp) {
      grid-column: span 2;
    }

    display: flex;
    flex-direction: column;
    justify-content: space-between;

    @media only screen and (min-width: @link-bp) {
      flex-direction: row;
    }

    > .text {
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: space-between;

      > hgroup {
        margin-bottom: 1rem;

        > h1 {
          font-size: var(--font-size-lg);
          font-weight: var(--font-weight-bold);
          margin-top: -8px;

          @media only screen and (min-width: @smaller-bp) {
            font-size: var(--font-size-xl);
          }
        }
        > .title {
          font-weight: var(--font-weight-light);
        }
      }
      > .note {
        max-width: 16.5rem;
        color: var(--dim);
        font-weight: var(--font-weight-light);
      }
    }

    > .links {
      display: flex;
      gap: 0.25rem;
      margin: 1rem 0 0 0;
      flex-direction: row;
      align-items: center;

      @media only screen and (min-width: @link-bp) {
        justify-content: space-between;
        gap: 0;
        flex-direction: column;
        margin: 0 0 0 0.5rem;
      }

      > li {
        display: flex;
        justify-content: center;
        align-items: center;

        > a {
          display: flex;
          font-size: 2rem;
          color: var(--dim);
          transition: color var(--transition-speeds) ease-in-out;

          &:hover,
          &:focus-visible {
            color: var(--white);
          }

          > svg {
            stroke-width: 1.5px;
          }
        }
      }
          
      > .github > a {
        color: var(--primary);
      }
      > .linkedin > a {
          color: var(--secondary);
      }
        
      
      > .resume {
        margin: 0 0 0 0.25rem;

        @media only screen and (min-width: @link-bp) {
          margin: 0.25rem 0 0 0;
        }

        > a {
          border-radius: 0.75rem;
          border: 2px solid;
          border-color: 0.5rem;
          padding: 0.5rem;
          font-size: 1rem;

          > svg {
            stroke-width: 2px;
          }
        }
      }
    }
  }

  .project {
    &[data-featured] {
      @media only screen and (min-width: @grid-1-bp) {
        grid-column: span 2;
        grid-row: span 2;
      }
    }

    &:focus-within .card > img,
    .card:hover > img {
      @media (prefers-reduced-motion) {
        scale: 1;
      }

      scale: 1.05;
    }

    .card {
      position: relative;

      > img {
        width: 100%;
        transition: scale var(--transition-speeds) ease-in-out;
      }

      &::before {
        content: "";
        position: absolute;
        z-index: 1;
        width: 100%;
        height: 40%;
        bottom: -5px;
        background: linear-gradient(
          #00000000 0%,
          #0000009c 50%,
          #000000f3 100%
        );
      }

      .featured-star {
        position: absolute;
        top: 0.5rem;
        left: 0.5rem;
        color: var(--primary);
        filter: drop-shadow(0px 0px 6px rgba(0, 0, 0, 1));
      }

      .details {
        position: absolute;
        z-index: 2;
        left: 0.5rem;
        bottom: 0.5rem;

        font-weight: 600;
        color: var(--white);

        > .info {
          font-size: var(--font-size-sm);
          font-weight: var(--font-weight-light);
        }
      }
    }
  }
</style>
