---
import Layout from "@layouts/Layout.astro";
import Link from "@components/Link.astro";
import Bento from "@components/Bento.astro";
import { projects } from "@packages/data/project";
const shownProjects = projects.filter((p) => p.show !== "hidden");

import { TbBrandGithub, TbBrandLinkedin, TbMail } from "solid-icons/tb";
import { Image } from "astro:assets";

type ImagesObject = { [key: string]: Function };
const allImages = import.meta.glob<{ default: ImageMetadata }>(
  "/src/images/**/*.{jpeg,jpg,png,gif}"
) as ImagesObject;
let images: ImagesObject = {};
Object.entries(allImages).forEach(([key, func]) => {
  const [_a, _b, _c, image] = key.split("/");
  images[image] = func;
});
---

<Layout
  title="Roni Tuohino"
  description="Hey, need a website or service? Hit me up!"
>
  <ol>
    <Bento class="intro">
      <div class="top">
        <hgroup>
          <h1>Roni Tuohino</h1>
          <p>
            I am a Finnish fullstack developer.<br /> I enjoy designing and building
            websites and services.
          </p>
        </hgroup>
        <ul class="links">
          <li>
            <Link
              aria-label="See my GitHub profile"
              href="https://github.com/ronituohino"
            >
              <TbBrandGithub />
            </Link>
          </li>
          <li>
            <Link
              aria-label="See my Linkedin profile"
              href="https://www.linkedin.com/in/ronituohino/"
            >
              <TbBrandLinkedin />
            </Link>
          </li>
          <li>
            <Link
              aria-label="Send me an email"
              href="mailto:tuohinoroni@gmail.com"
            >
              <TbMail />
            </Link>
          </li>
        </ul>
      </div>
    </Bento>

    <Bento class="note"
      ><p>
        Check out projects I've worked on below, and download my <Link
          href="/ronituohino-resume.pdf"
          title="Download résumé">résumé</Link
        >!
      </p></Bento
    >

    {
      shownProjects.map((project) => {
        const infoLine =
          project.organization !== ""
            ? [project.year, project.organization].join(" · ")
            : project.year;

        return (
          <Bento class="project" data-featured={project.show === "featured"}>
            <Link href={project.links[0].url}>
              <div class="card">
                <Image
                  src={images[`${project.slug}.png`]()}
                  alt={project.description}
                />
                <div class="details">
                  <p class="title">{project.title}</p>
                  <p class="info">{infoLine}</p>
                </div>
              </div>
            </Link>
          </Bento>
        );
      })
    }
  </ol>
</Layout>

<style lang="less">
  @grid-1-bp: 450px;
  @grid-2-bp: 680px;
  ol {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(var(--bento-min-size), 1fr));
    grid-auto-flow: dense;

    justify-content: center;
    grid-gap: var(--bento-gap);
  }

  .intro {
    padding: 1rem;
    @media only screen and (min-width: @grid-1-bp) {
      grid-column: span 2;
    }

    > .top {
      display: flex;
      flex-direction: column;
      justify-content: space-between;

      @link-bp: 460px;
      @media only screen and (min-width: @link-bp) {
        flex-direction: row;
      }

      > hgroup {
        > h1 {
          font-size: var(--font-size-lg);
          font-weight: var(--font-weight-bold);
          margin-top: -10px;
        }
        > p {
          margin-top: 0.5rem;
          max-width: 16.5rem;
          color: var(--dim);
          font-weight: var(--font-weight-light);
        }
      }

      > .links {
        display: flex;
        gap: 0.25rem;
        margin: 1rem 0 0 0;
        flex-direction: row;

        @media only screen and (min-width: @link-bp) {
          justify-content: space-between;
          gap: 0;
          flex-direction: column;
          margin: 0 0 0 0.5rem;
        }

        > li {
          display: flex;
          justify-content: center;
          align-items: center;

          > a {
            display: flex;
            font-size: 2rem;
            color: var(--dim);
            transition: color var(--transition-speeds) ease-in-out;

            &:hover,
            &:focus-visible {
              color: var(--white);
            }
          }
        }
      }
    }
  }

  .note {
    display: grid;
    place-items: center;
    padding: 1rem;
    color: var(--dim);
    font-weight: var(--font-weight-light);
    text-align: center;
  }

  .project {
    &[data-featured] {
      @media only screen and (min-width: @grid-1-bp) {
        grid-column: span 2;
        grid-row: span 2;
      }
    }

    .card {
      position: relative;

      > img {
        transition: scale var(--transition-speeds) ease-in-out;
      }
      &:hover > img {
        scale: 1.05;
      }

      &::before {
        content: "";
        position: absolute;
        z-index: 1;
        width: 100%;
        height: 40%;
        bottom: -5px;
        background: linear-gradient(
          #00000000 0%,
          #0000009c 50%,
          #000000f3 100%
        );
      }

      .details {
        position: absolute;
        z-index: 2;
        left: 0.5rem;
        bottom: 0.5rem;

        font-weight: 600;
        color: var(--white);

        > .info {
          font-size: var(--font-size-sm);
          font-weight: var(--font-weight-light);
        }
      }
    }
  }
</style>
