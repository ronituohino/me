---
import { getCollection } from "astro:content";
import type { ProjectSchema } from "@content/config";

const shownProjects = await getCollection(
  "projects",
  ({ data }: { data: ProjectSchema }) => data.show !== "hidden"
);

const sortedProjects = shownProjects.toSorted((a, b) => {
  if (a.data.year > b.data.year) {
    return -1;
  } else if (b.data.year > a.data.year) {
    return 1;
  } else {
    return 0;
  }
});

import Layout from "@layouts/Layout.astro";
import Link from "@components/Link.astro";
import { Dialog } from "@components/Dialog";

import Icon from "@components/Icon.astro";
import { Slideshow } from "@components/Slideshow";
---

<Layout>
  <section class="br">
    <hgroup>
      <h1>Roni Tuohino</h1>
      <p>Fullstack Developer</p>
    </hgroup>

    <p>I love building software and going climbing</p>

    <ul class="links">
      <li>
        <Dialog client:only>
          <Icon slot="button" icon="note" class="note" />
          <Slideshow
            client:only
            images={[
              {
                src: "/book.png",
                alt: "Top book Ørnfjord with rock climbers in the background.",
                width: 601,
                height: 798,
              },
              {
                src: "/writing.png",
                alt: "Open book with the text 'Hiton siisti mesta!' from Satu, Roni, Antton, and Perttu.",
                width: 605,
                height: 798,
              },
            ]}
          />
        </Dialog>
      </li>
      <li>
        <Dialog client:only>
          <Icon slot="button" icon="note" class="note" />
          <div class="project-wrapper">
            <table>
              <thead>
                <tr>
                  <th class="year-header">Year</th>
                  <th class="proj-header">Project</th>
                  <th class="org-header">Made at</th>
                  <th class="tech-header">Built with</th>
                </tr>
              </thead>
              <tbody>
                {
                  sortedProjects.map((project) => (
                    <tr>
                      <td class="year">{project.data.year}</td>
                      <td class="proj">
                        <Link href={project.data.links[0]}>
                          {project.data.title}
                          {project.data.show === "featured" ? (
                            <span>star!</span>
                          ) : null}
                        </Link>
                      </td>
                      <td class="org">{project.data.organization}</td>
                      <td class="tech">
                        {project.data.technologies.join(", ")}
                      </td>
                    </tr>
                  ))
                }
              </tbody>
            </table>
          </div>
        </Dialog>
      </li>
      <li>
        <Icon icon="key" class="key" />
      </li>
      <li>
        <Link
          ariaLabel="See my GitHub profile"
          href="https://github.com/ronituohino"
        >
          <Icon icon="github" />
        </Link>
      </li>
      <li>
        <Link
          ariaLabel="See my Linkedin profile"
          href="https://www.linkedin.com/in/ronituohino/"
        >
          <Icon icon="linkedin" />
        </Link>
      </li>
      <li>
        <Link ariaLabel="Send me an email" href="mailto:rt@ronituohino.com">
          <Icon icon="email" />
        </Link>
      </li>

      <li>
        <Link href="/ronituohino-resume.pdf" title="Download résumé (CV)"
          ><Icon icon="cv" /></Link
        >
      </li>
    </ul>
  </section>
</Layout>

<style>
  h1,
  p {
    filter: drop-shadow(0px 0px 6px hsl(0, 0%, 25%));
  }

  .br {
    padding: var(--content-padding);
    position: absolute;
    bottom: 0;
    right: 0;

    text-align: right;
    display: flex;
    flex-direction: column;
    align-items: end;
    justify-content: end;
    gap: 1rem;

    max-width: 500px;
  }

  .links {
    display: flex;
    flex-direction: row;
    gap: 0.25rem;
    flex-wrap: wrap;
    justify-content: end;
  }

  .project-wrapper {
    overflow: hidden;
    margin: 0.5rem;
    display: flex;
    justify-content: center;
  }

  table {
    border-collapse: collapse;
    width: calc(100% - 1rem);
    max-width: 1600px;
  }
  thead {
    text-align: left;
  }
  tbody {
    text-align: left;
  }

  thead > tr,
  tbody > tr:not(:last-child) {
    border-bottom: 3px solid black;
  }

  th,
  td {
    padding: 0.25rem 0.5rem;
  }

  .year-header,
  .year {
    width: 1rem;
    padding-left: 0;
  }
  .proj {
    word-break: break-word;
  }
  .org {
    display: none;
  }
  .org-header {
    display: none;
  }
  .tech-header {
    display: none;
  }
  .tech {
    display: none;
  }
  @media screen and (min-width: 470px) {
    .proj {
      word-break: normal;
    }
    .org-header {
      display: table-cell;
    }
    .org {
      display: table-cell;
    }
  }
  @media screen and (min-width: 900px) {
    .tech-header {
      display: table-cell;
    }
    .tech {
      display: table-cell;
    }
  }
  @media screen and (min-width: 768px) {
    .year-header,
    .year {
      width: 2rem;
    }
  }
</style>
